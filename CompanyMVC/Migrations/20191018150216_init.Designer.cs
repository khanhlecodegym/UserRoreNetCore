// <auto-generated />
using System;
using CompanyMVC.ConnectDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191018150216_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyMVC.Models.Attendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConferenceId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceId");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConferenceId = 1,
                            Name = "Mai Ba Quan"
                        },
                        new
                        {
                            Id = 2,
                            ConferenceId = 1,
                            Name = "Vinh Hoang"
                        },
                        new
                        {
                            Id = 3,
                            ConferenceId = 2,
                            Name = "Thanh Bon"
                        },
                        new
                        {
                            Id = 4,
                            ConferenceId = 2,
                            Name = "Nhi Uyen"
                        });
                });

            modelBuilder.Entity("CompanyMVC.Models.Conference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.ToTable("Conferences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "28 Nguyen Tri Phuong",
                            Name = "Bob",
                            Start = new DateTime(2019, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Location = "28 Nguyen Tri Phuong",
                            Name = "Andy",
                            Start = new DateTime(2019, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Location = "28 Nguyen Tri Phuong",
                            Name = "Jame",
                            Start = new DateTime(2019, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CompanyMVC.Models.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved");

                    b.Property<int>("ConferenceId");

                    b.Property<string>("Speaker");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ConferenceId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = false,
                            ConferenceId = 1,
                            Speaker = "Le Tuong Phuc",
                            Title = "Understanding ASP.NET Core MVC"
                        },
                        new
                        {
                            Id = 2,
                            Approved = false,
                            ConferenceId = 2,
                            Speaker = "Anh Khoa",
                            Title = "Understanding ASP.NET Core Dapper"
                        },
                        new
                        {
                            Id = 3,
                            Approved = false,
                            ConferenceId = 2,
                            Speaker = "Si Lun",
                            Title = "Understanding Write CV"
                        });
                });

            modelBuilder.Entity("CompanyMVC.Models.Attendee", b =>
                {
                    b.HasOne("CompanyMVC.Models.Conference", "Conference")
                        .WithMany("Attendees")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyMVC.Models.Proposal", b =>
                {
                    b.HasOne("CompanyMVC.Models.Conference", "Conference")
                        .WithMany("Proposals")
                        .HasForeignKey("ConferenceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
